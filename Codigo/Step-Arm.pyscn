    # -*- coding: utf-8 -*-
from stlib.physics.deformable import ElasticMaterialObject
from stlib.physics.constraints import FixedBox
from stlib.physics.collision import CollisionMesh
from stlib.scene import Node
from softrobots.actuators import PullingCable
from splib.loaders import loadPointListFromFile

import Sofa
class ArmController(Sofa.PythonScriptController):
    def __init__(self, node, cable):
        self.cableconstraintvalue = cable.getObject("CableConstraint").findData('value')
        self.name = "ArmController"

    def onKeyPressed(self,c):
        if (c == "+"):
            self.cableconstraintvalue.value =  self.cableconstraintvalue.value[0][0] + 2.
            print ('Shortening')
            print self.cableconstraintvalue.value
        if (c == "-"):
            self.cableconstraintvalue.value =  self.cableconstraintvalue.value[0][0] - 2.
            print 'Lengthening'
            print (self.cableconstraintvalue.value)

def SArm(parentNode=None, name="SArm",
           rotation=[0.0, 0.0, 0.0], translation=[0.0, 0.0, 0.0],
           fixingBox=[0.0,0.0,0.0], pullPointLocation=[0.0,0.0,0.0]):

    sarm = Node(parentNode, "SArm")
    eobject = ElasticMaterialObject(sarm,
                                   volumeMeshFileName="mesh/D100-H40-I34-SIN.msh",
                                   name='eobject',
                                   poissonRatio=0.3,
                                   youngModulus=180,
                                   totalMass=0.5,
                                   surfaceColor=[0.0, 0.3, 0.9],
                                   surfaceMeshFileName="STL/Brazo_20cm.stl",
                                   rotation=rotation,
                                   translation=translation)

    FixedBox(eobject, doVisualization=True, atPositions=[73,10,65,0,0,0])
    cable = PullingCable(eobject,
                         cableGeometry=loadPointListFromFile("cable/cable3.json"),
                         name='tendon',
                         pullPointLocation='35.0 0.0 10.0')

    CollisionMesh(eobject,
         surfaceMeshFileName="STL/Brazo_20cm.stl", name="part0")

    ArmController(sarm, cable)

def createScene(rootNode):
    # -*- coding: utf-8 -*-
    from stlib.scene import MainHeader, ContactHeader
    from stlib.visuals import ShowGrid
    from stlib.physics.rigid import Floor
    from stlib.physics.rigid import Cube

    m=MainHeader(rootNode, plugins=["SoftRobots"])
    m.getObject("VisualStyle").displayFlags='showForceFields showBehaviorModels showInteractionForceFields'
    ContactHeader(rootNode, alarmDistance=4, contactDistance=3, frictionCoef=0.08)
    ShowGrid(rootNode)
    SArm(rootNode)

    return rootNode
